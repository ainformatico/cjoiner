#!/usr/bin/env ruby

#
# @author Alejandro El Inform√°tico
#
# @version 1.1.0
#
# @created 20111105
#
# @modified 20120507
#
# @require gems [sass, sprockets 1.0.2, yui/compressor]
#

# system
require 'fileutils'
require 'pathname'
require 'yaml'
# gems
require 'rubygems'
require 'sass'
require 'sprockets'
require 'yui/compressor'

# configuration file
config_file = ARGV[0] || "config.yaml"

# yaml structure
# @config
#   @compress bool
#   @munge bool
#   @standalone bool
#   @yui string
#   @charset string
#   @common_path string
#   @common_output string
#   @common_dependencies []
#   @file string
#     @name string
#     @extension string
#     @type string
#     @major int
#     @minor int
#     @bugfix int
#     @compilation int
#     @compress bool
#     @dependencies []
#     @output string

if File.exists?(config_file)
  config = ::YAML::load_file(config_file)["config"]
  config["yui"] = config["yui"] || "yuicompressor-2.4.7.jar"
  config["munge"] = (config["munge"] == false) ? false : true
  config["charset"] = config["charset"] || "utf-8"
  config["standalone"] = config["standalone"] || false
  files = config["files"]

  files.each do |filename, opts|
    # set file path and name
    filename = (config["common_path"]) ? config["common_path"] + filename : filename
    f_name = Pathname.new(filename)
    t_name = (%[#{opts["name"]}.#{opts["major"]}.#{opts["minor"]}.#{opts["bugfix"]}.#{opts["compilation"]}.#{opts["extension"]}])
    t_file = f_name.dirname + t_name
    concatenation = ""
    # merge paths
    paths = config["common_dependencies"] | (opts["dependencies"] || [] << File.expand_path(t_file.dirname.to_s))
    # set common_path
    if config["common_path"]
      paths.each_with_index do |n, i|
        paths[i] = config["common_path"] + n;
      end
    end
    # merge sources
    sources = [] << File.expand_path(filename)
    # do magic
    if opts["type"] == "css" or opts["extension"] == "css"
      content = File.read(filename)
      # convert sass to css
      sass = ::Sass::Engine.new(content, :load_paths => paths, :style => (opts["style"] && opts["style"].to_sym) || :expanded)
      concatenation = sass.render
    else
      # sprockets
      secretary = ::Sprockets::Secretary.new(
        :load_path    => paths,
        :source_files => sources
      )
      concatenation = secretary.concatenation.to_s
    end
    # compress
    if config["compress"] and opts["compress"].nil? or opts["compress"]
      if opts["type"] == "css" or opts["extension"] == "css"
        # compress css
        if config["standalone"]
          temp_file = "_cjoiner_tmp.css"
          temp = File.new(temp_file, "w")
          temp.write(concatenation)
          temp.close
          concatenation = `java -jar #{config["yui"]} --charset #{config["charset"]} --type css #{temp_file}`
          File.delete(temp_file)
        else
          compressor = ::YUI::CssCompressor.new
          concatenation = compressor.compress(concatenation)
        end
      else
        if config["standalone"]
          temp_file = "_cjoiner_tmp.js"
          temp = File.new(temp_file, "w")
          temp.write(concatenation)
          temp.close
          munge = !config["munge"] ? "--nomunge" : ""
          concatenation = `java -jar #{config["yui"]} #{munge} --charset #{config["charset"]} --type js #{temp_file}`
          File.delete(temp_file)
        else
          compressor = ::YUI::JavaScriptCompressor.new(:munge => config["munge"], :charset => config["charset"])
          concatenation = compressor.compress(concatenation)
        end
      end
    end
    t_file.open("w") { |io| io.puts concatenation }
    # set custom output
    if opts["output"] or config["common_output"]
      output = ""
      if config["common_output"]
        output = config["common_output"]
      end
      if opts["output"]
        output += opts["output"]
      end
      FileUtils.mv(t_file, output + t_name)
    end
  end
end
